import { test, expect } from '@playwright/test';
import { login, logout } from '../global.calls';
test('Sign in and navigate to dashboard page', async ({ page }) => {
 await login(page);
 await page.waitForLoadState('networkidle');
 await page.waitForTimeout(400);
 await expect(page.getByText('Create New Campaign')).toBeVisible();
 await expect(page.getByText('Phishing Simulation Campaigns')).toBeVisible();
 await page.waitForTimeout(400);
 await expect(page.getByRole('link', { name: 'Overview Overview' })).toBeVisible();
 await expect(page.getByRole('link', { name: 'My Campaigns My Campaigns' })).toBeVisible();
 await expect(page.getByRole('link', { name: 'Target Users Target Users' })).toBeVisible();
 await page.waitForTimeout(400);
 await expect(page.getByText('My Organization')).toBeVisible();
 await expect(page.getByText('Individual Users')).toBeVisible();
 await expect(page.getByText('LogOut')).toBeVisible();
 await logout(page);
});

test('Sign in and navigate to organizations page', async ({ page }) => {
    await login(page);
    await page.waitForLoadState('networkidle');
    await page.waitForTimeout(400);
    await expect(page.getByText('Create New Campaign')).toBeVisible();
    await expect(page.getByText('Phishing Simulation Campaigns')).toBeVisible();
    await page.waitForTimeout(400);
    await expect(page.getByRole('link', { name: 'Overview Overview' })).toBeVisible();
    await expect(page.getByRole('link', { name: 'My Campaigns My Campaigns' })).toBeVisible();
    await expect(page.getByRole('link', { name: 'Target Users Target Users' })).toBeVisible();
    await page.waitForTimeout(400);
    await expect(page.getByText('My Organization')).toBeVisible();
    await expect(page.getByText('Individual Users')).toBeVisible();
    await expect(page.getByText('LogOut')).toBeVisible();
    await page.waitForTimeout(400);
    await page.getByText('My Organization').click();
    await expect(page.getByText('My Organization').nth(1)).toBeVisible();
    await expect(page.getByText('Users Who Are Linked to your')).toBeVisible();
    await expect(page.getByPlaceholder('Search user....')).toBeVisible();
    await logout(page);
   });

test('Sign in and navigate to Profile page', async ({ page }) => {
    await login(page);
    await page.waitForLoadState('networkidle');
    await page.waitForTimeout(400);
    await expect(page.getByText('Create New Campaign')).toBeVisible();
    await expect(page.getByText('Phishing Simulation Campaigns')).toBeVisible();
    await page.waitForTimeout(400);
    await expect(page.getByRole('link', { name: 'Overview Overview' })).toBeVisible();
    await expect(page.getByRole('link', { name: 'My Campaigns My Campaigns' })).toBeVisible();
    await expect(page.getByRole('link', { name: 'Target Users Target Users' })).toBeVisible();
    await page.waitForTimeout(400);
    await expect(page.getByText('My Organization')).toBeVisible();
    await expect(page.getByText('Individual Users')).toBeVisible();
    await expect(page.getByText('LogOut')).toBeVisible();
    await page.waitForTimeout(400);
    await page.getByText('My Profile').click();
    await expect(page.getByText('Update Profile')).toBeVisible();
   await expect(page.getByText('Profile', { exact: true })).toBeVisible();
   await expect(page.getByText('Full Name')).toBeVisible();
   await expect(page.getByText('Email Address')).toBeVisible();
   await expect(page.getByText('Phone Number')).toBeVisible();
   await expect(page.getByText('Company Name')).toBeVisible();
   await expect(page.getByText('Password')).toBeVisible();
    await logout(page);
   }); 
   
test('Sign in and navigate to Users Page', async ({ page }) => {
    await login(page);
    await page.waitForLoadState('networkidle');
    await page.waitForTimeout(400);
    await expect(page.getByText('Create New Campaign')).toBeVisible();
    await expect(page.getByText('Phishing Simulation Campaigns')).toBeVisible();
    await page.waitForTimeout(400);
    await expect(page.getByRole('link', { name: 'Overview Overview' })).toBeVisible();
    await expect(page.getByRole('link', { name: 'My Campaigns My Campaigns' })).toBeVisible();
    await expect(page.getByRole('link', { name: 'Target Users Target Users' })).toBeVisible();
    await page.waitForTimeout(400);
    await expect(page.getByText('My Organization')).toBeVisible();
    await expect(page.getByText('Individual Users')).toBeVisible();
    await expect(page.getByText('LogOut')).toBeVisible();
    await page.waitForTimeout(400);
    await page.getByRole('link', { name: 'Target Users Target Users' }).click();
    await page.waitForLoadState('networkidle');
    await expect(page.getByText('Target Users').nth(1)).toBeVisible();
   await expect(page.getByText('Import User')).toBeVisible();
   await expect(page.getByText('New User')).toBeVisible();
   await expect(page.getByText('Groups')).toBeVisible();
   await page.getByText('Groups').click();
   await page.waitForTimeout(500);
   await expect(page.getByText('Groups').nth(1)).toBeVisible();
    await logout(page);
   });
